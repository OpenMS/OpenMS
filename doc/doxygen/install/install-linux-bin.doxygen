/**
  @page install_linux_bin Installation on GNU/Linux

  @section deb_package_linux Install Debian package
  If you are using a Debian-based Linux we suggest to use the deb-package provided by us in our <a href="https://abibuilder.informatik.uni-tuebingen.de/archive/openms/OpenMSInstaller/release/latest">archive</a>.
  It is most easily installed with "gdebi" which automatically resolves the dependencies if they are available in your repositories.
  \code
  sudo apt-get install gdebi
  sudo gdebi /PATH/TO/OpenMS.deb
  \endcode
  If you encounter errors with unavailable packages, you can try the following steps:<br>
  When Qt5 (or one of its packages, e.g. qt5xbase) is missing, usually your Debian is too old to have a recent enough version in its official repositories.
  We suggest to use the same packages that we use for building (make sure to adapt the Qt version and your Debian/Ubuntu version, here Xenial):
  \code
  sudo add-apt-repository ppa:beineri/opt-qt59-xenial
  sudo apt-get update
  \endcode
  and try the installation again.
  If <b>after the successful Qt installation above</b>, ICU with its libicu is missing in a certain version, we suggest to find the missing version on https://pkgs.org/ and 
  install it with gdebi, too. You can safely have multiple versions of ICU installed.<br>
  To ensure the tool functionality please add the OPENMS_DATA_PATH variable to your environment as follows (you will get an error advising you this when executing a tool): 
  \code
  export OPENMS_DATA_PATH=/usr/share/OpenMS 
  \endcode
  If you used a thirdparty repository to install Qt5 (through the workaround above), do not forget to source the provided environment file like this (mind the version number again)
  \code
  source /opt/qt59/bin/qt59-env.sh
  \endcode
  
  Executables for THIRDPARTY applications can be found in:
  \code 
  /usr/share/OpenMS/THIRDPARTY
  \endcode
  Add the folders inside to your PATH for a convenient use of our adapters.

  @section package_managers_linux Install via package managers
  Currently there are also packaged versions of %OpenMS provided for Fedora, OpenSUSE, Debian, and Ubuntu <a href="https://pkgs.org/search/openms">available in the corresponding package managers</a> of these distributions (they might require a lookup in thirdparty "science" repositories).
  For other GNU/Linux distributions or to obtain the most recent version of the library you need to build your own %OpenMS.
  
  @note Please note that these packages are not directly maintained by us and we can not guarantee the same behaviour as when building it on your own.
  Also their availability and version is subject to change and support might be limited (due to unforeseen or untested behaviour). We also suggest not to install
  them parallel to our Debian package.
  
  @section build_your_own_linux Build it on your own
  Get the source code from Github and see @subpage install_linux on how to build %OpenMS.

  @note Some thirdparty software used via adapter tools in %OpenMS might also require an installed JavaVM.

  @section docker_linux Run a (Bio)Docker image
  We are also constantly updating our <a href="https://www.docker.com/">Docker</a> support.
  Images can be obtained via <a href="https://hub.docker.com/u/openms/>Dockerhub</a> and <a href="http://biocontainers.pro/">Biocontainers</a> repositories.
  Depending on what you want to do, images can be pulled via one of the following commands
  \code
  docker pull biocontainers/openms
  docker pull openms/library
  docker pull openms/executables
  docker pull openms/pyopenms
  \endcode
  once you have successfully installed docker (see <a href="https://docs.docker.com/engine/installation/">Docker documentation</a>).

  More dockerfiles to build different kinds of images (corresponding to build instructions, e.g. on ArchLinux) can be found on our Github under: https://github.com/OpenMS/dockerfiles
*/
