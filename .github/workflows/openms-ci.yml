# This is a basic workflow to help you get started with Actions

name: openms-ci

# Controls when the action will run. Triggers the workflow on push or pull request
# events but only for the master branch
on:
  push:
    branches: [ develop, ci/github_actions ]

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:

  build-win:
    runs-on: windows-latest
    steps:
    - uses: actions/checkout@v2
      with:
        path: OpenMS
        
    - name: Reduce PATH
      run: echo "PATH=C:\hostedtoolcache\windows\Python\3.7.9\x64\Scripts;C:\hostedtoolcache\windows\Python\3.7.9\x64;C:\hostedtoolcache\windows\Ruby\2.5.8\x64\bin;C:\Program Files\Java\jdk8u265-b01\bin;C:\ProgramData\kind;C:\vcpkg;C:\cf-cli;C:\Program Files (x86)\NSIS;C:\windows\system32;C:\windows;C:\windows\System32\Wbem;C:\windows\System32\WindowsPowerShell\v1.0;C:\windows\System32\OpenSSH;C:\ProgramData\Chocolatey\bin;C:\Program Files\Docker;C:\Program Files\PowerShell\7;C:\Program Files\OpenSSL\bin;C:\Strawberry\c\bin;C:\Strawberry\perl\site\bin;C:\Strawberry\perl\bin;C:\Program Files\Git\cmd;C:\Program Files\Git\mingw64\bin;C:\Program Files\Git\usr\bin;C:\Program Files (x86)\Microsoft Visual Studio\2019\\Enterprise\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\bin" | Out-File -FilePath $env:GITHUB_ENV -Encoding utf8 -Append

    - name: Install Qt
      uses: jurplel/install-qt-action@v2
      with:
        version: '5.12.6' # 5.12.7 is broken https://bugreports.qt.io/browse/QTBUG-81715
        host: 'windows' # default: win64_msvc2017_64
        target: 'desktop'
        install-deps: 'true'
        modules: 'qtsvg'
        cached: 'false'

    # https://github.com/marketplace/actions/visual-studio-shell
    - name: Set up Visual Studio shell
      uses: egor-tensin/vs-shell@v2
      with:
        arch: x64

    - name: Load contrib build
      run: |
          mkdir OpenMS/contrib
          cd OpenMS/contrib
          curl -o contribbld.tar.gz https://abibuilder.informatik.uni-tuebingen.de/archive/openms/contrib/windows/x64/msvc-14.2/contrib_build.tar.gz
          tar -xzf contribbld.tar.gz
          rm contribbld.tar.gz

    - name: Build
      shell: bash
      run: |
          mkdir bld
          pushd bld
          # TODO: set generator via variable, then we can share this step
          cmake -G "Visual Studio 16 2019" -A x64 -DOPENMS_CONTRIB_LIBS="$GITHUB_WORKSPACE/OpenMS/contrib" -DCMAKE_PREFIX_PATH="$(echo $Qt5_Dir)/lib/cmake;${Qt5_Dir}" ../OpenMS
          # Note: multiple --targets only supported by CMake 3.15+
          cmake --build . --config Release --target OpenMS SuperHirn

    - name: Tests windows
      run: |
          mkdir $GITHUB_WORKSPACE/bld/
          ctest --output-on-failure -V -S $GITHUB_WORKSPACE/OpenMS/tools/travis/cibuild.cmake
      env:
          SOURCE_DIRECTORY: "${{ github.workspace }}/OpenMS/"
          BUILD_NAME: "openms-ci-${{ github.repository }}-${{ github.head_ref }}-${{ github.base_ref }}"
          OPENMS_CONTRIB_LIBS: "${{ github.workspace }}/contrib"
          ENABLE_STYLE_TESTING: "OFF"
          ENABLE_TOPP_TESTING: "ON"
          ENABLE_CLASS_TESTING: "ON"
          WITH_GUI: "ON"
          ADDRESS_SANITIZER: "Off"
          BUILD_TYPE: "Release"
          OPENMP: "On"
          MATRIX_EVAL: "CC=gcc-7 && CXX=g++-7"

  build-macos:
    runs-on: macos-latest
    steps:
    - uses: actions/checkout@v2
      with:
        path: OpenMS

    - name: Install Qt
      uses: jurplel/install-qt-action@v2
      with:
        version: '5.12.7'
        host: 'mac'
        target: 'desktop'
        install-deps: 'true'
        modules: 'qtsvg'
        cached: 'false'

    - name: Install build tools
      run: brew install autoconf automake libtool

    - name: Load contrib build
      run: |
          mkdir OpenMS/contrib
          cd OpenMS/contrib
          curl -o contribbld.tar.gz https://abibuilder.informatik.uni-tuebingen.de/archive/openms/contrib/macOS/10.15.3/x64/appleclang-11.0.0/contrib_build.tar.gz
          tar -xzf contribbld.tar.gz
          rm contribbld.tar.gz

    - name: Fix contrib install names
      shell: bash 
      run: |
          for lib in $GITHUB_WORKSPACE/OpenMS/contrib/lib/*.dylib
          do
            install_name_tool -id $lib $lib
          done

    - name: Build
      run: |
          export CC=clang
          export CXX=clang++
          export MACOSX_DEPLOYMENT_TARGET=10.9

          # create symlinks like brew https://github.com/Homebrew/homebrew-core/blob/master/Formula/qt.rb#L61
          pushd $Qt5_Dir/include
            for f in $Qt5_Dir/lib/*.framework/Headers
            do
              lnknm=$(basename "${f%/*}" ".framework")
              ln -s $f $lnknm
            done
            for f in $Qt5_Dir/lib/*.framework/Versions/5/Qt*
            do
              install_name_tool -id $f $f
            done
            otool -L /Users/runner/work/OpenMS/Qt/5.12.7/clang_64/lib/QtCore.framework/Versions/5/QtCore
          popd

    - name: Build and test osx
      run: |
          export OS_PREFIX_PATH="${Qt5_Dir}/lib/cmake;${Qt5_Dir}"
          mkdir $GITHUB_WORKSPACE/bld/
          ctest --output-on-failure -V -S $GITHUB_WORKSPACE/OpenMS/tools/travis/cibuild.cmake
      env:
          SOURCE_DIRECTORY: "${{ github.workspace }}/OpenMS/"
          BUILD_NAME: "openms-ci-${{ github.repository }}-${{ github.head_ref }}-${{ github.base_ref }}"
          OPENMS_CONTRIB_LIBS: "${{ github.workspace }}/OpenMS/contrib"
          ENABLE_STYLE_TESTING: "OFF"
          ENABLE_TOPP_TESTING: "ON"
          ENABLE_CLASS_TESTING: "ON"
          WITH_GUI: "ON"
          ADDRESS_SANITIZER: "Off"
          BUILD_TYPE: "Release"
          OPENMP: "On"
          MATRIX_EVAL: "CC=gcc-7 && CXX=g++-7"

  build-lnx:
    runs-on: ubuntu-latest
    container: openms/manylinux:latest

    steps:
    # Cancels older builds if still running
    - uses: rokroskar/workflow-run-cleanup-action@master
      env:
        GITHUB_TOKEN: "${{ secrets.GITHUB_TOKEN }}"
      if: "!startsWith(github.ref, 'refs/tags/') && github.ref != 'refs/heads/master' && github.ref != 'refs/heads/develop'"

    - uses: actions/checkout@v2
      name: Checkout sources
      with:
        path: OpenMS

    - name: Build and tests manylinux
      run: |
          export OS_PREFIX_PATH="${Qt5_Dir}/lib/cmake;${Qt5_Dir}"
          mkdir  $GITHUB_WORKSPACE/bld/
          ctest --output-on-failure -V -S $GITHUB_WORKSPACE/OpenMS/tools/travis/cibuild.cmake
      env:
          SOURCE_DIRECTORY: "${{ github.workspace }}/OpenMS/"
          BUILD_NAME: "openms-ci-${{ github.repository }}-${{ github.head_ref }}-${{ github.base_ref }}"
          OPENMS_CONTRIB_LIBS: "${{ github.workspace }}/OpenMS/contrib"
          ENABLE_STYLE_TESTING: "OFF"
          ENABLE_TOPP_TESTING: "ON"
          ENABLE_CLASS_TESTING: "ON"
          WITH_GUI: "ON"
          ADDRESS_SANITIZER: "Off"
          BUILD_TYPE: "Release"
          OPENMP: "On"
          MATRIX_EVAL: "CC=gcc-7 && CXX=g++-7"
