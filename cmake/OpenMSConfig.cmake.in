# --------------------------------------------------------------------------
#                   OpenMS -- Open-Source Mass Spectrometry
# --------------------------------------------------------------------------
# Copyright The OpenMS Team -- Eberhard Karls University Tuebingen,
# ETH Zurich, and Freie Universitaet Berlin 2002-2021.
#
# This software is released under a three-clause BSD license:
#  * Redistributions of source code must retain the above copyright
#    notice, this list of conditions and the following disclaimer.
#  * Redistributions in binary form must reproduce the above copyright
#    notice, this list of conditions and the following disclaimer in the
#    documentation and/or other materials provided with the distribution.
#  * Neither the name of any author or any participating institution
#    may be used to endorse or promote products derived from this software
#    without specific prior written permission.
# For a full list of authors, refer to the file AUTHORS.
# --------------------------------------------------------------------------
# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
# AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
# IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
# ARE DISCLAIMED. IN NO EVENT SHALL ANY OF THE AUTHORS OR THE CONTRIBUTING
# INSTITUTIONS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,
# EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,
# PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS;
# OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,
# WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR
# OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF
# ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
#
# --------------------------------------------------------------------------
# $Maintainer: Julianus Pfeuffer $
# $Authors: Julianus Pfeuffer $
# --------------------------------------------------------------------------

@PACKAGE_INIT@

### CMake OpenMS config file for external code
### configured by the OpenMS build system from <OpenMS>/cmake/OpenMSConfig.cmake.in
include(CMakeFindDependencyMacro)

#------------------------------------------------------------------------------

#TODO somehow add the same/compatible versions that were found by OpenMS? And what about static vs dynamic? E.g. if we link to static zlib in OpenMS(.dll) what (if at all) can/should the consumer link against?
find_dependency(Qt5 COMPONENTS Core Network)
if (@OPENMP_FOUND@)
  find_dependency(Threads)
  find_dependency(OpenMP COMPONENTS CXX)
endif()

#TODO the above are the only libs whose FindModules (or Configs) currently define (imported) targets (the rest only populates LIB_INCLUDE_DIRS etc.). For some libs we could upgrade or enable it
# (Boost, Xerces, ..) but for most we would need to write this ourselves. We need to make sure that we specify STATIC
# or SHARED correctly so that (in theory) only SHARED libs show up in our targets' interfaces and only those should be searched again by find_dependency by our config
# If we adapt our own FindModules, we also need to ship them https://stackoverflow.com/questions/44920389/installing-a-cmake-library-also-ship-find-modules-for-the-dependencies
# Another nice way to automate this and also add an important version requirement is https://stackoverflow.com/questions/46836767/generic-transitive-behavior-in-cmake-package-configuration-file-find-dependen
# Instead of going through the global FOUND_PACKAGES, we could go through the INTERFACE_LINK_LIBRARIES property of our libs
# and list all the targets which do not have hardcoded paths. We need to separate library name and components. Qt5::Core -> find_dependency(Qt5 ${Qt5_VERSION} COMPONENTS Core)
# But then there is OpenMP::OpenMP_CXX.. which has a different pattern, so forget about it. Just specify manually.

check_required_components(OpenMS)

# we need this to reference the target file
get_filename_component(OPENMS_CMAKE_DIR "${CMAKE_CURRENT_LIST_FILE}" PATH)

## The targets file
include("${OPENMS_CMAKE_DIR}/@_OPENMS_EXPORT_FILE@")
